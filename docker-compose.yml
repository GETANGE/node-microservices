version: '3.8'

services:
  mongodb:
    image: mongo:6
    container_name: mongodb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'db.runCommand({ ping: 1 })' | mongosh mongodb://localhost:27017/test --quiet"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - node-microservices

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    networks:
      - node-microservices

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - rabbitmq_data:/data
    networks:
      - node-microservices

  api-gateway:
    build: ./Api-gateway
    ports:
      - "5000:5000"
    env_file: ./Api-gateway/.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000 || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
    volumes:
      - logs:/app/logs
      - uploads:/app/uploads
    networks:
      - node-microservices

  identity-service:
    build: ./Identity-service
    ports:
      - "5001:5001"
    env_file: ./Identity-service/.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5001 || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
      - MONGO_URL=mongodb://mongodb:27017/identityDB
    volumes:
      - logs:/app/logs
      - uploads:/app/uploads
    networks:
      - node-microservices

  post-service:
    build: ./post-service
    ports:
      - "5002:5002"
    env_file: ./post-service/.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5002 || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
      - MONGO_URL=mongodb://mongodb:27017/postDB
    volumes:
      - logs:/app/logs
      - uploads:/app/uploads
    networks:
      - node-microservices

  media-service:
    build: ./media-service
    ports:
      - "5003:5003"
    env_file: ./media-service/.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5003 || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
      - MONGO_URL=mongodb://mongodb:27017/mediaDB
    volumes:
      - logs:/app/logs
      - uploads:/app/uploads
    networks:
      - node-microservices

  search-service:
    build: ./search-service
    ports:
      - "5004:5004"
    env_file: ./search-service/.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5004 || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq:5672
      - MONGO_URL=mongodb://mongodb:27017/searchDB
    volumes:
      - logs:/app/logs
      - uploads:/app/uploads
    networks:
      - node-microservices

networks:
  node-microservices:
    driver: bridge

volumes:
  logs:
  uploads:
  redis_data:
  mongo_data:
  rabbitmq_data:
